#--- general fixes ---#

E cprefix="E" lower_case_cprefix="e_" gir_version="1.2" gir_namespace="EDataServer"
e_sexp_error cname="get_error" # see patch_gi()

EList.iterators hidden="1" # private
EList.list hidden="1" # private
EList.copy hidden="1" # private
EList.free hidden="1" # private
EList.closure hidden="1" # private
EListIterator.iterator hidden="1" # private

#--- things to match the official vapi ---#

EAccount cheader_filename="libedataserver/e-account.h" type_id="e_account_get_type ()"

EAccountList cheader_filename="libedataserver/e-account-list.h"

EAccountIdentity is_value_type="1" cheader_filename="libedataserver/e-account.h"

EAccountReceiptPolicy cheader_filename="libedataserver/e-account.h"

EAccountService is_value_type="1" cheader_filename="libedataserver/e-account.h"

e_account_access_t cheader_filename="libedataserver/e-account.h"
e_account_find_t cheader_filename="libedataserver/e-account.h"
e_account_item_t cheader_filename="libedataserver/e-account.h"
e_account_list_new hidden="1"
e_account_list_construct hidden="1"

e_categories* cheader_filename="libedataserver/e-categories.h"

EClient abstract="1" cheader_filename="libedataserver/e-client.h" type_id="e_client_get_type ()"
e_client_error_create transfer_ownership="1"

e_client_get_backend_property async="1"
e_client_get_backend_property.cancellable nullable="1"
e_client_get_backend_property_finish
e_client_get_backend_property_finish.prop_value is_out="1" value_owned="1"

e_client_get_backend_property_sync.prop_value is_out="1" value_owned="1"
e_client_get_backend_property_sync.cancellable nullable="1"
e_client_get_capabilities type_arguments="string"
e_client_open async="1"
e_client_open.cancellable nullable="1"
e_client_open_sync.cancellable nullable="1"
e_client_refresh async="1"
e_client_refresh.cancellable nullable="1"
e_client_refresh_sync.cancellable nullable="1"
e_client_remove async="1"
e_client_remove.cancellable nullable="1"
e_client_remove_sync.cancellable nullable="1"
e_client_retrieve_capabilities async="1"
e_client_retrieve_capabilities.cancellable nullable="1"
e_client_retrieve_capabilities_finish.capabilities is_out="1" value_owned="1"
e_client_retrieve_capabilities_sync.capabilities is_out="1" value_owned="1"
e_client_retrieve_capabilities_sync.cancellable nullable="1"
e_client_set_backend_property async="1"
e_client_set_backend_property.cancellable nullable="1"
e_client_set_backend_property_sync.cancellable nullable="1"
e_client_util_unwrap_dbus_error errordomain="1"

CLIENT_BACKEND* cheader_filename="libedataserver/e-client.h"

EClientError cheader_filename="libedataserver/e-client.h"
EClientErrorsList is_value_type="1" cheader_filename="libedataserver/e-client.h"

ECredentials is_value_type="1" free_function="e_credentials_free" cheader_filename="libedataserver/e-credentials.h"
ECredentials.priv hidden="1" type="bool"
e_credentials_get transfer_ownership="1"
e_credentials_util_prompt_flags_to_string transfer_ownership="1"
ECredentialsPromptFlags cheader_filename="libedataserver/e-credentials.h"

E_CREDENTIALS_KEY* cheader_filename="libedataserver/e-credentials.h"

e_data_server_util* cheader_filename="libedataserver/e-data-server-utils.h"

E_DEBUG_LOG* cheader_filename="libedataserver/e-debug-log.h"

EDS_* cheader_filename="libedataserver/eds-version.h"

EFlag cheader_filename="libedataserver/e-flag.h"

e_debug_log* cheader_filename="libedataserver/e-debug-log.h"

e_filename_make_safe cheader_filename="libedataserver/e-data-server-util.h"

e_get_user* cheader_filename="libedataserver/e-data-server-util.h"

eds_check_version cheader_filename="libedataserver/eds-version.h"

EIterator type_id="e_iterator_get_type ()" cheader_filename="libedataserver/e-iterator.h" 
EIterator::invalidate has_emitter="1"

EList* cheader_filename="libedataserver/e-list.h" type_id="e_list_get_type ()"
e_list_new hidden="1"
e_list_construct hidden="1"
e_list_duplicate transfer_ownership="1"

e_localtime_with_offset cheader_filename="libedataserver/e-time-utils.h" 
e_mktime_utc cheader_filename="libedataserver/e-time-utils.h" 

EListIterator type_id="e_list_iterator_get_type ()" cheader_filename="libedataserver/e-list-iterator.h" 

EMemChunk cheader_filename="libedataserver/e-memory.h" 

EOperationPool cheader_filename="libedataserver/e-operation-pool.h" 

e_pointer_tracker* cheader_filename="libedataserver/e-data-server-util.h" 
e_*strftime cheader_filename="libedataserver/e-data-server-util.h" 

EProxy type_id="e_proxy_get_type ()" cheader_filename="libedataserver/e-proxy.h" 

ESExp* cheader_filename="libedataserver/e-sexp.h" 
ESExp.term_chunks type_name="E.MemChunk"
ESExp.result_chunks type_name="E.MemChunk"
E_TYPE_SEXP cheader_filename="libedataserver/e-sexp.h" 

ESource type_id="e_source_get_type ()" cheader_filename="libedataserver/e-source.h" 
e_source_build_absolute_uri transfer_ownership="1"
e_source_copy transfer_ownership="1"
e_source_get_duped_property transfer_ownership="1"
e_source_get_uri transfer_ownership="1"
e_source_set_property.property_value nullable="1"
e_source_to_standalone_xml transfer_ownership="1"
e_source_get_property transfer_ownership="1"
e_source_uid_from_xml_node transfer_ownership="1"

ESourceGroup type_id="e_source_group_get_type ()" cheader_filename="libedataserver/e-source-group.h" 
ESourceGroup::source_added.source type_name="E.Source"
ESourceGroup::source_removed.source type_name="E.Source"

e_source_group_get_property transfer_ownership="1"
e_source_group_peek_sources type_arguments="E.Source"
e_source_group_to_xml transfer_ownership="1"
e_source_group_uid_from_xmldoc transfer_ownership="1"

ESourceList type_id="e_source_list_get_type ()" cheader_filename="libedataserver/e-source-list.h" 
e_source_list_ensure_group transfer_ownership="1"
e_source_list_peek_default_source nullable="1"
e_source_list_peek_groups type_arguments="E.SourceGroup"

e_time_format* cheader_filename="libedataserver/e-time-utils.h" 
e_time_get_d_fmt_with_4digit_year cheader_filename="libedataserver/e-time-utils.h" transfer_ownership="1"
e_time_parse_date* cheader_filename="libedataserver/e-time-utils.h" 
e_time_parse_time cheader_filename="libedataserver/e-time-utils.h" 

ETimeParse* cheader_filename="libedataserver/e-time-utils.h" 

EUri is_value_type="1" cheader_filename="libedataserver/e-url.h" 
EUri.params type_name="GLib.Datalist"
e_uri_to_string transfer_ownership="1"

e_uid_new transfer_ownership="1" cheader_filename="libedataserver/e-uid.h" 

e_url_equal cheader_filename="libedataserver/e-url.h" 
e_url_shroud transfer_ownership="1" cheader_filename="libedataserver/e-url.h" 

e_util_strstrcase transfer_ownership="1" cheader_filename="libedataserver/e-data-server-util.h" 
e_util_unicode_get_utf8 transfer_ownership="1" cheader_filename="libedataserver/e-data-server-util.h" 
e_util_utf8_make_valid transfer_ownership="1" cheader_filename="libedataserver/e-data-server-util.h" 
e_util_utf8_remove_accents transfer_ownership="1" cheader_filename="libedataserver/e-data-server-util.h" 
e_util_ensure_gdbus_string cheader_filename="libedataserver/e-data-server-util.h" 
e_util_gthread_id cheader_filename="libedataserver/e-data-server-util.h" 
e_util_utf8_strcasecmp cheader_filename="libedataserver/e-data-server-util.h" 
e_util_utf8_strstrcase cheader_filename="libedataserver/e-data-server-util.h" 
e_util_utf8_strstrcasedecomp cheader_filename="libedataserver/e-data-server-util.h" 

EXmlHash* cheader_filename="libedataserver/e-xml-hash-utils.h" 
e_xml_to_hash transfer_ownership="1" cheader_filename="libedataserver/e-xml-hash-utils.h" 
e_xml_destroy_hash cheader_filename="libedataserver/e-xml-hash-utils.h" 
e_xml_from_hash cheader_filename="libedataserver/e-xml-hash-utils.h" 

e_xml_get_child_by_name cheader_filename="libedataserver/e-xml-utils.h" 
e_xml_parse_file cheader_filename="libedataserver/e-xml-utils.h" 
e_xml_save_file cheader_filename="libedataserver/e-xml-utils.h" 
